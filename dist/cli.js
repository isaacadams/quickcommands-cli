/* 
        NOTICE NOTICE NOTICE 
                         
        THIS IS AN AUTOMATICALLY GENERATED FILE BY GULP

        DO NOT EDIT THIS FILE DIRECTLY

        MAKE EDITS TO THE SAME FILE LOCATED IN THE 'SRC' FOLDER
    */

"use strict";

var _utilities = require("./utilities");

var _path = _interopRequireDefault(require("path"));

var _commander = _interopRequireDefault(require("commander"));

var _colors = _interopRequireDefault(require("colors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cli = function cli(arg, cb) {
  switch (arg) {
    case 'git.addremote':
      gitaddremote();
      break;

    case 'git.addignore':
      gitaddignore();
      break;

    case 'git.report':
      var dirname = _path.default.dirname(__filename);

      var abspath = _path.default.resolve(_path.default.join(dirname, '..'));

      (0, _utilities.runCommand)("python \"".concat(_path.default.join(abspath + '/source/python/cli.py'), "\" -d C:\\source -u iadams \"Isaac Adams\" -t \"1 week ago\""), cb);
      break;

    default:
      cb('no such command exists');
      break;
  }

  function gitaddremote() {
    _commander.default.option('-n, --nickname <n>', 'Give the nickname for the remote repo').option('-u, --url <u>', 'Give the url that points to the remote repo').parse(process.argv);

    var nickname = _commander.default.nickname; // getCLIArgument('nickname');

    var url = _commander.default.url; // getCLIArgument('link');

    if (!nickname || !url) {
      _commander.default.help(function (help) {
        return _colors.default.red('\nmissing required arguments!\n\n') + help;
      }); //return cb('required arguments --nickname and --url are missing\n\n' + program.usage());

    }

    var command = "\n            git checkout master &&\n            git remote add ".concat(nickname, " ").concat(url, " &&\n            git fetch ").concat(nickname, " &&\n            git pull ").concat(nickname, " master --allow-unrelated-histories &&\n            git branch -u ").concat(nickname, "/master master &&\n            git add *\n            git push\n        ");
    (0, _utilities.runCommand)(command, null);
  }

  function gitaddignore(cb) {
    var command = "\n            echo node_modules/>> .gitignore && \n            git reset && \n            git add .gitignore && \n            git commit -m \"added git ignore and ignoring node_modules folder\"\n        ";
    (0, _utilities.runCommand)(command, cb);
  }
};

module.exports.cli = cli;